namespace: helm-test
name: banner
deployment:
  client:
    replicas: 1
    image:
      repository: eladha123/banners-client
      name: banner-client
      tag: 1.0.3
  server:
    replicas: 1
    image:
      repository: eladha123/banners-server
      name: banner-server
      tag: 1.0.3
configmap:
  data:
    conf: |
      "server {
        listen 80;
        location / {
          root /usr/share/nginx/html;
          try_files $uri $uri/ /index.html;
        }
        location /assets/ {
          root /usr/share/nginx/html;
          try_files $uri $uri/ =404;
        }
      }"
ingress:
  client:
    path: /banner(/|$)(.*)
    pathType: ImplementationSpecific
  server:
    path: /banner/api(/|$)(.*)
    pathType: ImplementationSpecific
postgresql:
  fullnameOverride: banner-postgresql
  global:
    postgresql:
      auth:
        username: elad
        password: password
        database: users
  primary:
    persistence:
      size: 1Gi
    initdb:
      scripts:
        pg-init.sh: |
          #!/bin/bash
          echo "Initializing database..."
          set -e
          export PGPASSWORD="$POSTGRES_PASSWORD"
          export PGUSER="$POSTGRES_USER"
          export PGDATABASE="$POSTGRES_DATABASE"

          psql -v ON_ERROR_STOP=1 <<-EOSQL

          CREATE TABLE users (
              id VARCHAR(255) PRIMARY KEY NOT NULL,
              name VARCHAR(255) NOT NULL,
              email VARCHAR(255) NOT NULL,
              password VARCHAR(255) NOT NULL,
              isAdmin BOOLEAN NOT NULL
          );

          EOSQL
          echo "Database initialized!"
mongodb:
  global:
    namespaceOverride: helm-test
  fullnameOverride: banner-mongodb
  architecture: replicaset
  auth:
    enabled: true
    rootUser: root
    rootPassword: password
  replicaCount: 3
  persistence:
    size: 1Gi
  arbiter:
    enabled: false
  initdbScripts:
    init-script.js: |
      try {
      db = db.getSiblingDB("admin");
      
      const banners = [

        {
          productID: "123",
          catogryName: "456",
          clickCount: 0,
          name: "Banner 1",
          image: {
            url: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS7rBbw6FThUHGkWfi5_JGe0NpqN3p2XS2Rhw&usqp=CAU",
            alt: "Banner 1"
          },
          size: "side",
          kind: ["price"],
          text: "Special Sale!",
          createdAt: new Date(),
          author: "Admin"
        },
        {

          productID: "456",
          catogryName: "789",
          clickCount: 0,
          name: "Banner 2",
          image: {
            url: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT4r5PwaOdp97FiCsbmhHThLusqv_vd9kWwRg&usqp=CAU",
            alt: "Banner 2"
          },
          size: "top",
          kind: ["sale"],
          text: "Limited Time Offer!",
          createdAt: new Date(),
          author: "Admin"
        },
        {

          productID: "789",
          catogryName: "012",
          clickCount: 0,
          name: "Banner 3",
          image: {
            url: "https://www.tapet3d.co.il/files/products/product23_image1_2021-03-29_11-25-56.jpg",
            alt: "Banner 3"
          },
          size: "all",
          kind: ["price", "sale"],
          text: "New Arrivals!",
          createdAt: new Date(),
          author: "Admin"
        },
        {

          productID: "012",
          catogryName: "345",
          clickCount: 0,
          name: "Banner 4",
          image: {
            url: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSf5x5SoebRbIFuWZbuivoTVfAign9O9Iee0Q&usqp=CAU",
            alt: "Banner 4"
          },
          size: "side",
          kind: ["price"],
          text: "Clearance Sale!",
          createdAt: new Date(),
          author: "Admin"
        },
        {
          productID: "345",
          catogryName: "678",
          clickCount: 0,
          name: "Banner 5", 
          image: {
            url: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTZZKsULxS0Tdi9pG2_0--uQ-c46OnV8xaFxw&usqp=CAU",
            alt: "Banner 5"
          },
          size: "top",
          kind: ["sale"],
          text: "Flash Sale!",
          createdAt: new Date(),
          author: "Admin"
        }
      ];
      const result = db.banners.insertMany(banners);
      console.log(`${result.length} banners inserted successfully.`);
      print('Database seeded successfully.');
      print(db.getSiblingDB("admin").banners.countDocuments());
      } catch (error) {
        print('Error while seeding database:');
        print(err);
        console.error("Error inserting banners:", error);
      }
