namespace: helm-test
name: banner
deployment:
  client:
    replicas: 1
    image:
      repository: eladha123/banners-client
      name: banner-client
      tag: 1.0.2
  server:
    replicas: 1
    image:
      repository: eladha123/banners-server
      name: banner-server
      tag: 1.0.2
configmap:
  data:
    conf: |
      "server {
        listen 80;
        location / {
          root /usr/share/nginx/html;
          try_files $uri $uri/ /index.html;
        }
        location /assets/ {
          root /usr/share/nginx/html;
          try_files $uri $uri/ =404;
        }
      }"
ingress:
  client:
    path: /banner(/|$)(.*)
    pathType: ImplementationSpecific
  server:
    path: /banner/api(/|$)(.*)
    pathType: ImplementationSpecific
postgresql:
  fullnameOverride: banner-postgresql
  global:
    namespaceOverride: banner
    postgresql:
      auth:
        username: elad
        password: password
        database: users
  primary:
    persistence:
      size: 1Gi
    initdb:
      scripts:
        pg-init.sh: |
          #!/bin/bash
          echo "Initializing database..."
          set -e
          export PGPASSWORD="$POSTGRES_PASSWORD"
          export PGUSER="$POSTGRES_USER"
          export PGDATABASE="$POSTGRES_DATABASE"

          psql -v ON_ERROR_STOP=1 <<-EOSQL

          CREATE TABLE users (
              id VARCHAR(255) PRIMARY KEY NOT NULL,
              name VARCHAR(255) NOT NULL,
              email VARCHAR(255) NOT NULL,
              password VARCHAR(255) NOT NULL,
              isAdmin BOOLEAN NOT NULL
          );

          EOSQL
          echo "Database initialized!"
mongodb:
  global:
    namespaceOverride: banner
  fullnameOverride: banner-mongodb
  architecture: replicaset
  auth:
    enabled: true
    rootUser: root
    rootPassword: password
  replicaCount: 3
  persistence:
    size: 1Gi
  arbiter:
    enabled: false
  initdbScripts:
    init-script.js: "try {\n  db = db.getSiblingDB(\"admin\");\n  \n  const banners = [\n\n    {\n      productID: \"123\",\n      catogryName: \"456\",\n      clickCount: 0,\n      name: \"Banner 1\",\n      image: {\n        url: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS7rBbw6FThUHGkWfi5_JGe0NpqN3p2XS2Rhw&usqp=CAU\",\n        alt: \"Banner 1\"\n      },\n      size: \"side\",\n      kind: [\"price\"],\n      text: \"Special Sale!\",\n      createdAt: new Date(),\n      author: \"Admin\"\n    },\n    {\n\n      productID: \"456\",\n      catogryName: \"789\",\n      clickCount: 0,\n      name: \"Banner 2\",\n      image: {\n        url: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT4r5PwaOdp97FiCsbmhHThLusqv_vd9kWwRg&usqp=CAU\",\n        alt: \"Banner 2\"\n      },\n      size: \"top\",\n      kind: [\"sale\"],\n      text: \"Limited Time Offer!\",\n      createdAt: new Date(),\n      author: \"Admin\"\n    },\n    {\n\n      productID: \"789\",\n      catogryName: \"012\",\n      clickCount: 0,\n      name: \"Banner 3\",\n      image: {\n        url: \"https://www.tapet3d.co.il/files/products/product23_image1_2021-03-29_11-25-56.jpg\",\n        alt: \"Banner 3\"\n      },\n      size: \"all\",\n      kind: [\"price\", \"sale\"],\n      text: \"New Arrivals!\",\n      createdAt: new Date(),\n      author: \"Admin\"\n    },\n    {\n\n      productID: \"012\",\n      catogryName: \"345\",\n      clickCount: 0,\n      name: \"Banner 4\",\n      image: {\n        url: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSf5x5SoebRbIFuWZbuivoTVfAign9O9Iee0Q&usqp=CAU\",\n        alt: \"Banner 4\"\n      },\n      size: \"side\",\n      kind: [\"price\"],\n      text: \"Clearance Sale!\",\n      createdAt: new Date(),\n      author: \"Admin\"\n    },\n    {\n      productID: \"345\",\n      catogryName: \"678\",\n      clickCount: 0,\n      name: \"Banner 5\", \n      image: {\n        url: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTZZKsULxS0Tdi9pG2_0--uQ-c46OnV8xaFxw&usqp=CAU\",\n        alt: \"Banner 5\"\n      },\n      size: \"top\",\n      kind: [\"sale\"],\n      text: \"Flash Sale!\",\n      createdAt: new Date(),\n      author: \"Admin\"\n    }\n  ];\n  const result = db.banners.insertMany(banners);\n  console.log(`${result.length} banners inserted successfully.`);\n  print('Database seeded successfully.');\n  print(db.getSiblingDB(\"admin\").banners.countDocuments());\n} catch (error) {\n  print('Error while seeding database:');\n  print(err);\n  console.error(\"Error inserting banners:\", error);\n}\n"
